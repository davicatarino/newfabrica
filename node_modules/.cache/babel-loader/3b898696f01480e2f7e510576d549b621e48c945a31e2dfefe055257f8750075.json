{"ast":null,"code":"export default function HandleVisibility() {\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      console.log(entry);\n      if (entry.isIntersecting) {\n        entry.target.classList.add('show');\n      } else {\n        entry.target.classList.remove('show');\n      }\n    });\n  });\n  const hiddenElements = document.querySelectorAll('.OBS');\n  hiddenElements.forEach(el => observer.observe(el));\n}\n_c = HandleVisibility;\nvar _c;\n$RefreshReg$(_c, \"HandleVisibility\");","map":{"version":3,"names":["HandleVisibility","observer","IntersectionObserver","entries","forEach","entry","console","log","isIntersecting","target","classList","add","remove","hiddenElements","document","querySelectorAll","el","observe","_c","$RefreshReg$"],"sources":["C:/Users/davi-/Documents/trab/newfabrica/src/componenents/observer/Visibility/index.jsx"],"sourcesContent":["export default function HandleVisibility() {\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      console.log(entry);\n      if (entry.isIntersecting) {\n        entry.target.classList.add('show');\n      } else {\n        entry.target.classList.remove('show');\n      }\n    });\n  });\n\n  const hiddenElements = document.querySelectorAll('.OBS');\n  hiddenElements.forEach((el) => observer.observe(el));\n}\n"],"mappings":"AAAA,eAAe,SAASA,gBAAgBA,CAAA,EAAG;EACzC,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;IACrDA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;MACzBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,IAAIA,KAAK,CAACG,cAAc,EAAE;QACxBH,KAAK,CAACI,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MACpC,CAAC,MAAM;QACLN,KAAK,CAACI,MAAM,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;MACvC;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,MAAM,CAAC;EACxDF,cAAc,CAACT,OAAO,CAAEY,EAAE,IAAKf,QAAQ,CAACgB,OAAO,CAACD,EAAE,CAAC,CAAC;AACtD;AAACE,EAAA,GAduBlB,gBAAgB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}